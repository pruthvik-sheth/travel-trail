apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  labels:
    app: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      serviceAccountName: webapp-service-account
      nodeSelector:
        kubernetes.io/arch: arm64
        cloud.google.com/compute-class: Scale-Out
      imagePullSecrets:
        - name: myregistrykey
      containers:
        - name: web-app-container
          image: dhairya22/shareitinerary:latest
          ports:
            - containerPort: 9090 # where the pod of postgres is running
          env:
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: db
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: DB_USER
            - name: POSTGRES_PASS
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: DB_PASS
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: host
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 9090
            initialDelaySeconds: 120
            periodSeconds: 100
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
  annotations:
    cloud.google.com/backend-config: '{"ports": {"9090":"webapp-config"}}'
spec:
  type: NodePort
  selector:
    app: webapp
  ports:
    - protocol: TCP
      port: 9090 # port address where service is running
      targetPort: 9090 # to transfer the incoming request to the port
